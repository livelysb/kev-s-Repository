create user zuplay identified by 1234;
alter user zuplay account unlock;
grant connect, resource to zuplay;
conn zuplay/1234;
show user;

delete lists;
select * from price;
select * from player;
select count(*) from lists;
select * from master;
conn system/admin;

delete from lists where isusrtcd = '01718016';
delete from lists where isusrtcd = '09222016';

drop user zuplay cascade; -- 계정 삭제

commit;

--테이블 삭제
Begin 
for c in (select table_name from user_tables) loop
  execute immediate 'drop table '||c.table_name||' cascade constraints';
end loop;
End;

--시퀀스 삭제


DROP	SEQUENCE	IM_SQ	;
DROP	SEQUENCE	PQ_SQ	;
DROP	SEQUENCE	PI_SQ	;
DROP	SEQUENCE	PEH_SQ	;
DROP	SEQUENCE	PL_SQ	;
DROP	SEQUENCE	FRIEND_SQ	;
DROP	SEQUENCE	BC_SQ	;
DROP	SEQUENCE	BI_SQ	;
DROP	SEQUENCE	SDH_SQ	;
DROP	SEQUENCE	RP_SQ	;
DROP	SEQUENCE	DP_SQ	;
DROP	SEQUENCE	SL_SQ	;
DROP	SEQUENCE	PLIKE_SQ	;
DROP	SEQUENCE	PS_SQ	;

 

--여기부터 아래를 쭉 다 실행시키면 됨

/* 시퀀스 */
CREATE SEQUENCE IM_SQ
	INCREMENT BY 1
	START WITH 1;
CREATE SEQUENCE PQ_SQ
	INCREMENT BY 1
	START WITH 1;
CREATE SEQUENCE PI_SQ
	INCREMENT BY 1
	START WITH 1;
CREATE SEQUENCE PEH_SQ
	INCREMENT BY 1
	START WITH 1;  
CREATE SEQUENCE PL_SQ
	INCREMENT BY 1
	START WITH 1;
CREATE SEQUENCE FRIEND_SQ
	INCREMENT BY 1
	START WITH 1;
CREATE SEQUENCE BC_SQ
	INCREMENT BY 1
	START WITH 1;
CREATE SEQUENCE BI_SQ
	INCREMENT BY 1
	START WITH 1;
CREATE SEQUENCE SDH_SQ
	INCREMENT BY 1
	START WITH 1;
CREATE SEQUENCE RP_SQ
	INCREMENT BY 1
	START WITH 1;
CREATE SEQUENCE DP_SQ
	INCREMENT BY 1
	START WITH 1;
  
CREATE SEQUENCE SL_SQ
  INCREMENT BY 1
  START WITH 1;

CREATE SEQUENCE PLIKE_SQ
  INCREMENT BY 1
  START WITH 1;
  
CREATE SEQUENCE PS_SQ
  INCREMENT BY 1
  START WITH 1;
  
/* 플레이어 */
CREATE TABLE PLAYER (
	PLAYER_NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	PLAYER_NAVER_ID VARCHAR2(30) NOT NULL, /* 네이버아이디 */
	PLAYER_GENDER VARCHAR2(2) NOT NULL, /* 성별 */
	PLAYER_AGE VARCHAR2(30), /* 연령대 */
	PLAYER_MONEY INTEGER DEFAULT 0 NOT NULL, /* 사이버머니 */
	PLAYER_PREMONEY INTEGER NOT NULL, /* 전일 사이버머니 */
	PLAYER_RUBY INTEGER DEFAULT 0 NOT NULL, /* 루비 */
	PLAYER_GRADE VARCHAR2(30) NOT NULL, /* 등급 */
	PLAYER_LAST_ACCESS DATE NOT NULL, /* 최종접속일 */
	PLAYER_DAILY_RANK INTEGER NOT NULL, /* 일간 랭크 */
	PLAYER_SEASON_RANK INTEGER NOT NULL /* 시즌 랭크 */
);

COMMENT ON TABLE PLAYER IS '플레이어';

COMMENT ON COLUMN PLAYER.PLAYER_NICKNAME IS '닉네임';

COMMENT ON COLUMN PLAYER.PLAYER_NAVER_ID IS '네이버아이디';

COMMENT ON COLUMN PLAYER.PLAYER_GENDER IS '성별';

COMMENT ON COLUMN PLAYER.PLAYER_AGE IS '연령대';

COMMENT ON COLUMN PLAYER.PLAYER_MONEY IS '사이버머니';

COMMENT ON COLUMN PLAYER.PLAYER_PREMONEY IS '전일 사이버머니';

COMMENT ON COLUMN PLAYER.PLAYER_RUBY IS '루비';

COMMENT ON COLUMN PLAYER.PLAYER_GRADE IS '등급';

COMMENT ON COLUMN PLAYER.PLAYER_LAST_ACCESS IS '최종접속일';

COMMENT ON COLUMN PLAYER.PLAYER_DAILY_RANK IS '일간 랭크';

COMMENT ON COLUMN PLAYER.PLAYER_SEASON_RANK IS '시즌 랭크';

CREATE UNIQUE INDEX PK_PLAYER
	ON PLAYER (
		PLAYER_NICKNAME ASC
	);

ALTER TABLE PLAYER
	ADD
		CONSTRAINT PK_PLAYER
		PRIMARY KEY (
			PLAYER_NICKNAME
		);

/* 플레이어_아이템 */
CREATE TABLE PLAYER_ITEM (
	PI_SQ INTEGER NOT NULL, /* 시퀀스 */
	PLAYER_NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	ITEM_CODE VARCHAR(30) NOT NULL, /* 아이템 코드 */
	PI_INDEX INTEGER NOT NULL /* 인덱스 */
);

COMMENT ON TABLE PLAYER_ITEM IS '플레이어_아이템';

COMMENT ON COLUMN PLAYER_ITEM.PI_SQ IS '시퀀스';

COMMENT ON COLUMN PLAYER_ITEM.PLAYER_NICKNAME IS '닉네임';

COMMENT ON COLUMN PLAYER_ITEM.ITEM_CODE IS '아이템 코드';

COMMENT ON COLUMN PLAYER_ITEM.PI_INDEX IS '인덱스';

CREATE UNIQUE INDEX PK_PLAYER_ITEM
	ON PLAYER_ITEM (
		PI_SQ ASC
	);

ALTER TABLE PLAYER_ITEM
	ADD
		CONSTRAINT PK_PLAYER_ITEM
		PRIMARY KEY (
			PI_SQ
		);

/* 아이템 */
CREATE TABLE ITEM (
	ITEM_CODE VARCHAR(30) NOT NULL, /* 아이템 코드 */
	ITEM_NAME VARCHAR2(30) NOT NULL, /* 아이템 이름 */
	ITEM_PRICE INTEGER, /* 아이템 가격 */
	ITEM_CLASS VARCHAR2(15) NOT NULL, /* 아이템 구분 */
	ITEM_GRADE VARCHAR(10) NOT NULL, /* 아이템 등급 */
	ITEM_IMG VARCHAR2(255) NOT NULL, /* 이미지 파일 */
	ITEM_GENDER VARCHAR(1) NOT NULL /* 성별 */
);

COMMENT ON TABLE ITEM IS '아이템';

COMMENT ON COLUMN ITEM.ITEM_CODE IS '아이템 코드';

COMMENT ON COLUMN ITEM.ITEM_NAME IS '아이템 이름';

COMMENT ON COLUMN ITEM.ITEM_PRICE IS '아이템 가격';

COMMENT ON COLUMN ITEM.ITEM_CLASS IS '아이템 구분';

COMMENT ON COLUMN ITEM.ITEM_GRADE IS '아이템 등급';

COMMENT ON COLUMN ITEM.ITEM_IMG IS '이미지 파일';

COMMENT ON COLUMN ITEM.ITEM_GENDER IS '성별';

CREATE UNIQUE INDEX PK_ITEM
	ON ITEM (
		ITEM_CODE ASC
	);

ALTER TABLE ITEM
	ADD
		CONSTRAINT PK_ITEM
		PRIMARY KEY (
			ITEM_CODE
		);

/* 친구 */
CREATE TABLE FRIEND (
	FRIEND_SQ INTEGER NOT NULL, /* 시퀀스 */
	PLAYER_NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	PLAYER_NICKNAME2 VARCHAR2(30) NOT NULL, /* 닉네임2 */
	FRIEND_ISACEPTED VARCHAR(1) NOT NULL, /* 수락여부 */
	FRIEND_DATE DATE NOT NULL /* 친구맺은날짜 */
);

COMMENT ON TABLE FRIEND IS '친구';

COMMENT ON COLUMN FRIEND.FRIEND_SQ IS '시퀀스';

COMMENT ON COLUMN FRIEND.PLAYER_NICKNAME IS '닉네임';

COMMENT ON COLUMN FRIEND.PLAYER_NICKNAME2 IS '닉네임2';

COMMENT ON COLUMN FRIEND.FRIEND_ISACEPTED IS '수락여부';

COMMENT ON COLUMN FRIEND.FRIEND_DATE IS '친구맺은날짜';

CREATE UNIQUE INDEX PK_FRIEND
	ON FRIEND (
		FRIEND_SQ ASC
	);

ALTER TABLE FRIEND
	ADD
		CONSTRAINT PK_FRIEND
		PRIMARY KEY (
			FRIEND_SQ
		);

/* 게시글 */
CREATE TABLE BOARD (
	BOARD_NO INTEGER NOT NULL, /* 게시글 번호 */
	PLAYER_NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	BOARD_TITLE VARCHAR2(255) NOT NULL, /* 게시글 제목 */
	BOARD_LIKE INTEGER NOT NULL, /* 좋아요 */
	BOARD_CONTENT VARCHAR2(255) NOT NULL, /* 게시글 내용 */
	BOARD_TIME DATE NOT NULL, /* 게시 시간 */
	BOARD_HITS INTEGER NOT NULL /* 조회수 */
);

COMMENT ON TABLE BOARD IS '게시글';

COMMENT ON COLUMN BOARD.BOARD_NO IS '게시글 번호';

COMMENT ON COLUMN BOARD.PLAYER_NICKNAME IS '닉네임';

COMMENT ON COLUMN BOARD.BOARD_TITLE IS '게시글 제목';

COMMENT ON COLUMN BOARD.BOARD_LIKE IS '좋아요';

COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '게시글 내용';

COMMENT ON COLUMN BOARD.BOARD_TIME IS '게시 시간';

COMMENT ON COLUMN BOARD.BOARD_HITS IS '조회수';

CREATE UNIQUE INDEX PK_BOARD
	ON BOARD (
		BOARD_NO ASC
	);

ALTER TABLE BOARD
	ADD
		CONSTRAINT PK_BOARD
		PRIMARY KEY (
			BOARD_NO
		);

/* 댓글 */
CREATE TABLE BOARD_COMMENT (
	BC_SQ INTEGER NOT NULL, /* 시퀀스 */
	PLAYER_NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	BOARD_NO INTEGER NOT NULL, /* 게시글 번호 */
	BC_COMMENT_TIME DATE NOT NULL, /* 게시 시간 */
	BC_COMMENT_CONTENT VARCHAR2(255) NOT NULL /* 댓글 내용 */
);

COMMENT ON TABLE BOARD_COMMENT IS '댓글';

COMMENT ON COLUMN BOARD_COMMENT.BC_SQ IS '시퀀스';

COMMENT ON COLUMN BOARD_COMMENT.PLAYER_NICKNAME IS '닉네임';

COMMENT ON COLUMN BOARD_COMMENT.BOARD_NO IS '게시글 번호';

COMMENT ON COLUMN BOARD_COMMENT.BC_COMMENT_TIME IS '게시 시간';

COMMENT ON COLUMN BOARD_COMMENT.BC_COMMENT_CONTENT IS '댓글 내용';

CREATE UNIQUE INDEX PK_BOARD_COMMENT
	ON BOARD_COMMENT (
		BC_SQ ASC
	);

ALTER TABLE BOARD_COMMENT
	ADD
		CONSTRAINT PK_BOARD_COMMENT
		PRIMARY KEY (
			BC_SQ
		);

/* 상장목록 */
CREATE TABLE LISTS (
	isuCd VARCHAR2(100) NOT NULL, /* 종목코드 */
	isuSrtCd VARCHAR2(255) NOT NULL, /* 종목단축코드 */
	mktTpCd VARCHAR2(255), /* 시장구분코드 */
	isuKorNm VARCHAR2(255), /* 종목한글명 */
	isuKorAbbrv VARCHAR2(255) /* 종목한글약명 */
);

COMMENT ON TABLE LISTS IS '상장목록';

COMMENT ON COLUMN LISTS.isuCd IS '종목코드';

COMMENT ON COLUMN LISTS.isuSrtCd IS '종목단축코드';

COMMENT ON COLUMN LISTS.mktTpCd IS '시장구분코드';

COMMENT ON COLUMN LISTS.isuKorNm IS '종목한글명';

COMMENT ON COLUMN LISTS.isuKorAbbrv IS '종목한글약명';

CREATE UNIQUE INDEX PK_LISTS
	ON LISTS (
		isuCd ASC
	);

ALTER TABLE LISTS
	ADD
		CONSTRAINT PK_LISTS
		PRIMARY KEY (
			isuCd
		);

/* 마스터 */
CREATE TABLE MASTER (
	isuCd VARCHAR2(100) NOT NULL, /* 종목코드 */
	isuSrtCd VARCHAR2(100), /* 종목단축코드 */
	isuKorAbbrv VARCHAR2(100), /* 종목한글약명 */
	govncExcelYn VARCHAR2(100), /* 지배구조우량여부 */
	haltYn VARCHAR2(100), /* 거래정지여부 */
	mktcapScaleCd VARCHAR2(100), /* 시가총액규모코드 */
	prevddAccTrdvol INTEGER, /* 전일누적체결수량 */
	prevddAccTrdval INTEGER, /* 전일누적거래대금 */
	uplmtprc INTEGER, /* 상한가 */
	lwlmtprc INTEGER, /* 하한가 */
	parval INTEGER, /* 액면가 */
	listShrs INTEGER, /* 상장주식수 */
	kind VARCHAR2(30) /* 분류 */
);

COMMENT ON TABLE MASTER IS '마스터';

COMMENT ON COLUMN MASTER.isuCd IS '종목코드';

COMMENT ON COLUMN MASTER.isuSrtCd IS '종목단축코드';

COMMENT ON COLUMN MASTER.isuKorAbbrv IS '종목한글약명';

COMMENT ON COLUMN MASTER.govncExcelYn IS '지배구조우량여부';

COMMENT ON COLUMN MASTER.haltYn IS '거래정지여부';

COMMENT ON COLUMN MASTER.mktcapScaleCd IS '시가총액규모코드';

COMMENT ON COLUMN MASTER.prevddAccTrdvol IS '전일누적체결수량';

COMMENT ON COLUMN MASTER.prevddAccTrdval IS '전일누적거래대금';

COMMENT ON COLUMN MASTER.uplmtprc IS '상한가';

COMMENT ON COLUMN MASTER.lwlmtprc IS '하한가';

COMMENT ON COLUMN MASTER.parval IS '액면가';

COMMENT ON COLUMN MASTER.listShrs IS '상장주식수';

COMMENT ON COLUMN MASTER.kind IS '분류';

CREATE UNIQUE INDEX PK_MASTER
	ON MASTER (
		isuCd ASC
	);

ALTER TABLE MASTER
	ADD
		CONSTRAINT PK_MASTER
		PRIMARY KEY (
			isuCd
		);

/* 가격 */
CREATE TABLE PRICE (
	isuCd VARCHAR2(100) NOT NULL, /* 종목코드 */
	cmpprevddTpCd VARCHAR2(100), /* 전일대비구분코드 */
	cmpprevddPrc INTEGER, /* 전일대비가격 */
	trdPrc INTEGER, /* 체결가격 */
	accTrdvol INTEGER, /* 체결수량,거래량 */
	opnprc INTEGER, /* 시가 */
	hgprc INTEGER, /* 고가 */
	lwprc INTEGER, /* 저가 */
	trdTm VARCHAR2(100), /* 체결시각,거래시각 */
	mktStatTpCd VARCHAR(10) /* 장상태구분코드 */
);

COMMENT ON TABLE PRICE IS '가격';

COMMENT ON COLUMN PRICE.isuCd IS '종목코드';

COMMENT ON COLUMN PRICE.cmpprevddTpCd IS '전일대비구분코드';

COMMENT ON COLUMN PRICE.cmpprevddPrc IS '전일대비가격';

COMMENT ON COLUMN PRICE.trdPrc IS '체결가격';

COMMENT ON COLUMN PRICE.accTrdvol IS '체결수량,거래량';

COMMENT ON COLUMN PRICE.opnprc IS '시가';

COMMENT ON COLUMN PRICE.hgprc IS '고가';

COMMENT ON COLUMN PRICE.lwprc IS '저가';

COMMENT ON COLUMN PRICE.trdTm IS '체결시각,거래시각';

COMMENT ON COLUMN PRICE.mktStatTpCd IS '장상태구분코드';

CREATE UNIQUE INDEX PK_PRICE
	ON PRICE (
		isuCd ASC
	);

ALTER TABLE PRICE
	ADD
		CONSTRAINT PK_PRICE
		PRIMARY KEY (
			isuCd
		);

/* 실시간주식체결가 */
CREATE TABLE REALTIME_PRICE (
	RP_SQ INTEGER NOT NULL, /* 시퀀스 */
	isuCd VARCHAR2(100) NOT NULL, /* 종목코드 */
	RP_trdPrc INTEGER NOT NULL, /* 체결가격 */
	RP_trdTm VARCHAR2(100) NOT NULL /* 체결시각,거래시각 */
);

COMMENT ON TABLE REALTIME_PRICE IS '실시간주식체결가';

COMMENT ON COLUMN REALTIME_PRICE.RP_SQ IS '시퀀스';

COMMENT ON COLUMN REALTIME_PRICE.isuCd IS '종목코드';

COMMENT ON COLUMN REALTIME_PRICE.RP_trdPrc IS '체결가격';

COMMENT ON COLUMN REALTIME_PRICE.RP_trdTm IS '체결시각,거래시각';

CREATE UNIQUE INDEX PK_REALTIME_PRICE
	ON REALTIME_PRICE (
		RP_SQ ASC
	);

ALTER TABLE REALTIME_PRICE
	ADD
		CONSTRAINT PK_REALTIME_PRICE
		PRIMARY KEY (
			RP_SQ
		);

/* 일별주식종가 */
CREATE TABLE DAILY_PRICE (
	DP_SQ INTEGER NOT NULL, /* 시퀀스 */
	isuCd VARCHAR2(100) NOT NULL, /* 종목코드 */
	DP_clsprc INTEGER NOT NULL, /* 종가 */
	DP_DATE DATE NOT NULL /* 일자 */
);

COMMENT ON TABLE DAILY_PRICE IS '일별주식종가';

COMMENT ON COLUMN DAILY_PRICE.DP_SQ IS '시퀀스';

COMMENT ON COLUMN DAILY_PRICE.isuCd IS '종목코드';

COMMENT ON COLUMN DAILY_PRICE.DP_clsprc IS '종가';

COMMENT ON COLUMN DAILY_PRICE.DP_DATE IS '일자';

CREATE UNIQUE INDEX PK_DAILY_PRICE
	ON DAILY_PRICE (
		DP_SQ ASC
	);

ALTER TABLE DAILY_PRICE
	ADD
		CONSTRAINT PK_DAILY_PRICE
		PRIMARY KEY (
			DP_SQ
		);

/* 플레이어_주식 */
CREATE TABLE PLAYER_LISTS (
	PL_SQ INTEGER NOT NULL, /* 시퀀스 */
	isuCd VARCHAR2(100) NOT NULL, /* 종목코드 */
	PLAYER_NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	PL_QUANTITY INTEGER NOT NULL /* 수량 */
);

COMMENT ON TABLE PLAYER_LISTS IS '플레이어_주식';

COMMENT ON COLUMN PLAYER_LISTS.PL_SQ IS '시퀀스';

COMMENT ON COLUMN PLAYER_LISTS.isuCd IS '종목코드';

COMMENT ON COLUMN PLAYER_LISTS.PLAYER_NICKNAME IS '닉네임';

COMMENT ON COLUMN PLAYER_LISTS.PL_QUANTITY IS '수량';

CREATE UNIQUE INDEX PK_PLAYER_LISTS
	ON PLAYER_LISTS (
		PL_SQ ASC
	);

ALTER TABLE PLAYER_LISTS
	ADD
		CONSTRAINT PK_PLAYER_LISTS
		PRIMARY KEY (
			PL_SQ
		);

/* 주식거래 기록 */
CREATE TABLE STOCK_DEAL_HISTORY (
	SDH_SQ INTEGER NOT NULL, /* 시퀀스 */
	isuCd VARCHAR2(100) NOT NULL, /* 종목코드 */
	PLAYER_NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	SDH_DEAL_PRICE INTEGER NOT NULL, /* 거래가 */
	SDH_DEAL_TIME DATE NOT NULL, /* 거래 시각 */
	SDH_QUANTITY INTEGER NOT NULL, /* 수량 */
	SDH_BUY_SELL VARCHAR(1) NOT NULL /* B/S */
);

COMMENT ON TABLE STOCK_DEAL_HISTORY IS '주식거래 기록';

COMMENT ON COLUMN STOCK_DEAL_HISTORY.SDH_SQ IS '시퀀스';

COMMENT ON COLUMN STOCK_DEAL_HISTORY.isuCd IS '종목코드';

COMMENT ON COLUMN STOCK_DEAL_HISTORY.PLAYER_NICKNAME IS '닉네임';

COMMENT ON COLUMN STOCK_DEAL_HISTORY.SDH_DEAL_PRICE IS '거래가';

COMMENT ON COLUMN STOCK_DEAL_HISTORY.SDH_DEAL_TIME IS '거래 시각';

COMMENT ON COLUMN STOCK_DEAL_HISTORY.SDH_QUANTITY IS '수량';

COMMENT ON COLUMN STOCK_DEAL_HISTORY.SDH_BUY_SELL IS 'B/S';

CREATE UNIQUE INDEX PK_STOCK_DEAL_HISTORY
	ON STOCK_DEAL_HISTORY (
		SDH_SQ ASC
	);

ALTER TABLE STOCK_DEAL_HISTORY
	ADD
		CONSTRAINT PK_STOCK_DEAL_HISTORY
		PRIMARY KEY (
			SDH_SQ
		);

/* 주가수익률_기록 */
CREATE TABLE EARNING_RATE_HISTORY (
	ERH_SQ INTEGER NOT NULL, /* 시퀀스 */
	PLAYER_NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	ERH_PE NUMBER(8,6) NOT NULL, /* 수익률 */
	ERH_DATE DATE NOT NULL /* 일자 */
);

COMMENT ON TABLE EARNING_RATE_HISTORY IS '주가수익률_기록';

COMMENT ON COLUMN EARNING_RATE_HISTORY.ERH_SQ IS '시퀀스';

COMMENT ON COLUMN EARNING_RATE_HISTORY.PLAYER_NICKNAME IS '닉네임';

COMMENT ON COLUMN EARNING_RATE_HISTORY.ERH_PE IS '수익률';

COMMENT ON COLUMN EARNING_RATE_HISTORY.ERH_DATE IS '일자';

CREATE UNIQUE INDEX PK_EARNING_RATE_HISTORY
	ON EARNING_RATE_HISTORY (
		ERH_SQ ASC
	);

ALTER TABLE EARNING_RATE_HISTORY
	ADD
		CONSTRAINT PK_EARNING_RATE_HISTORY
		PRIMARY KEY (
			ERH_SQ
		);

/* 아이템 경매장 */
CREATE TABLE ITEM_MARKET (
	IM_SQ INTEGER NOT NULL, /* 시퀀스 */
	PLAYER_NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	ITEM_CODE VARCHAR(30) NOT NULL, /* 아이템 코드 */
	IM_PURCHASE_PRICE INTEGER NOT NULL, /* 판매가 */
	IM_BID_TIME DATE NOT NULL, /* 입찰 시각 */
	IM_AUCTION_END VARCHAR(1) NOT NULL /* 진행여부 */
);

COMMENT ON TABLE ITEM_MARKET IS '아이템 경매장';

COMMENT ON COLUMN ITEM_MARKET.IM_SQ IS '시퀀스';

COMMENT ON COLUMN ITEM_MARKET.PLAYER_NICKNAME IS '닉네임';

COMMENT ON COLUMN ITEM_MARKET.ITEM_CODE IS '아이템 코드';

COMMENT ON COLUMN ITEM_MARKET.IM_PURCHASE_PRICE IS '판매가';

COMMENT ON COLUMN ITEM_MARKET.IM_BID_TIME IS '입찰 시각';

COMMENT ON COLUMN ITEM_MARKET.IM_AUCTION_END IS '진행여부';

CREATE UNIQUE INDEX PK_ITEM_MARKET
	ON ITEM_MARKET (
		IM_SQ ASC
	);

ALTER TABLE ITEM_MARKET
	ADD
		CONSTRAINT PK_ITEM_MARKET
		PRIMARY KEY (
			IM_SQ
		);

/* 게시글 이미지 */
CREATE TABLE BOARD_IMAGE (
	BI_SQ INTEGER NOT NULL, /* 시퀀스 */
	BOARD_NO INTEGER NOT NULL, /* 게시글 번호 */
	BI_ORIGIN VARCHAR2(255) NOT NULL, /* 이미지파일명 */
	BI_NAME VARCHAR2(255) /* 게시글이미지 */
);

COMMENT ON TABLE BOARD_IMAGE IS '게시글 이미지';

COMMENT ON COLUMN BOARD_IMAGE.BI_SQ IS '시퀀스';

COMMENT ON COLUMN BOARD_IMAGE.BOARD_NO IS '게시글 번호';

COMMENT ON COLUMN BOARD_IMAGE.BI_ORIGIN IS '이미지파일명';

COMMENT ON COLUMN BOARD_IMAGE.BI_NAME IS '게시글이미지';

CREATE UNIQUE INDEX PK_BOARD_IMAGE
	ON BOARD_IMAGE (
		BI_SQ ASC
	);

ALTER TABLE BOARD_IMAGE
	ADD
		CONSTRAINT PK_BOARD_IMAGE
		PRIMARY KEY (
			BI_SQ
		);

/* 기업정보_즐겨찾기 */
CREATE TABLE STOCK_LIKE (
	SL_SQ INTEGER NOT NULL, /* 시퀀스 */
	PLAYER_NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	isuCd VARCHAR2(100) NOT NULL /* 종목코드 */
);

COMMENT ON TABLE STOCK_LIKE IS '기업정보_즐겨찾기';

COMMENT ON COLUMN STOCK_LIKE.SL_SQ IS '시퀀스';

COMMENT ON COLUMN STOCK_LIKE.PLAYER_NICKNAME IS '닉네임';

COMMENT ON COLUMN STOCK_LIKE.isuCd IS '종목코드';

CREATE UNIQUE INDEX PK_STOCK_LIKE
	ON STOCK_LIKE (
		SL_SQ ASC
	);

ALTER TABLE STOCK_LIKE
	ADD
		CONSTRAINT PK_STOCK_LIKE
		PRIMARY KEY (
			SL_SQ
		);

/* 플레이어_좋아요 */
CREATE TABLE PLAYER_LIKE (
	PLIKE_SQ INTEGER NOT NULL, /* 시퀀스 */
	PLAYER_NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	PLAYER_NICKNAME2 VARCHAR2(30) NOT NULL /* 좋아하는 사람 */
);

COMMENT ON TABLE PLAYER_LIKE IS '플레이어_좋아요';

COMMENT ON COLUMN PLAYER_LIKE.PLIKE_SQ IS '시퀀스';

COMMENT ON COLUMN PLAYER_LIKE.PLAYER_NICKNAME IS '닉네임';

COMMENT ON COLUMN PLAYER_LIKE.PLAYER_NICKNAME2 IS '좋아하는 사람';

CREATE UNIQUE INDEX PK_PLAYER_LIKE
	ON PLAYER_LIKE (
		PLIKE_SQ ASC
	);

ALTER TABLE PLAYER_LIKE
	ADD
		CONSTRAINT PK_PLAYER_LIKE
		PRIMARY KEY (
			PLIKE_SQ
		);

/* 설정 */
CREATE TABLE PLAYER_SETTING (
	PS_SQ INTEGER NOT NULL, /* 시퀀스 */
	PLAYER_NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	PS_BGM_SOUND INTEGER NOT NULL, /* 음량설정 */
	PS_MY_PAGE VARCHAR(1) NOT NULL, /* 내정보공개설정 */
	PS_CHATTING VARCHAR(1) NOT NULL, /* 귓속말 설정 */
	PS_FRIEND_ADD VARCHAR(1) NOT NULL, /* 친구추가 설정 */
  PS_THEME VARCHAR2(30) default 'kokomo' NOT NULL /* 테마 */
);

COMMENT ON TABLE PLAYER_SETTING IS '설정';

COMMENT ON COLUMN PLAYER_SETTING.PS_SQ IS '시퀀스';

COMMENT ON COLUMN PLAYER_SETTING.PLAYER_NICKNAME IS '닉네임';

COMMENT ON COLUMN PLAYER_SETTING.PS_BGM_SOUND IS '음량설정';

COMMENT ON COLUMN PLAYER_SETTING.PS_MY_PAGE IS '내정보공개설정';

COMMENT ON COLUMN PLAYER_SETTING.PS_CHATTING IS '귓속말 설정';

COMMENT ON COLUMN PLAYER_SETTING.PS_FRIEND_ADD IS '친구추가 설정';

COMMENT ON COLUMN PLAYER_SETTING.PS_THEME IS '테마';

CREATE UNIQUE INDEX PK_PLAYER_SETTING
	ON PLAYER_SETTING (
		PS_SQ ASC
	);

ALTER TABLE PLAYER_SETTING
	ADD
		CONSTRAINT PK_PLAYER_SETTING
		PRIMARY KEY (
			PS_SQ
		);

ALTER TABLE PLAYER_ITEM
	ADD
		CONSTRAINT FK_PLAYER_TO_PI
		FOREIGN KEY (
			PLAYER_NICKNAME
		)
		REFERENCES PLAYER (
			PLAYER_NICKNAME
		)on delete cascade;

ALTER TABLE PLAYER_ITEM
	ADD
		CONSTRAINT FK_ITEM_TO_PI
		FOREIGN KEY (
			ITEM_CODE
		)
		REFERENCES ITEM (
			ITEM_CODE
		)on delete cascade;

ALTER TABLE FRIEND
	ADD
		CONSTRAINT FK_PLAYER_TO_FRIEND
		FOREIGN KEY (
			PLAYER_NICKNAME
		)
		REFERENCES PLAYER (
			PLAYER_NICKNAME
		)on delete cascade;

ALTER TABLE FRIEND
	ADD
		CONSTRAINT FK_PLAYER_TO_FRIEND2
		FOREIGN KEY (
			PLAYER_NICKNAME2
		)
		REFERENCES PLAYER (
			PLAYER_NICKNAME
		)on delete cascade;

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_PLAYER_TO_BOARD
		FOREIGN KEY (
			PLAYER_NICKNAME
		)
		REFERENCES PLAYER (
			PLAYER_NICKNAME
		)on delete cascade;

ALTER TABLE BOARD_COMMENT
	ADD
		CONSTRAINT FK_BOARD_TO_BC
		FOREIGN KEY (
			BOARD_NO
		)
		REFERENCES BOARD (
			BOARD_NO
		)on delete cascade;

ALTER TABLE BOARD_COMMENT
	ADD
		CONSTRAINT FK_PLAYER_TO_BC
		FOREIGN KEY (
			PLAYER_NICKNAME
		)
		REFERENCES PLAYER (
			PLAYER_NICKNAME
		)on delete cascade;

ALTER TABLE MASTER
	ADD
		CONSTRAINT FK_LISTS_TO_MASTER
		FOREIGN KEY (
			isuCd
		)
		REFERENCES LISTS (
			isuCd
		)on delete cascade;

ALTER TABLE PRICE
	ADD
		CONSTRAINT FK_MASTER_TO_PRICE
		FOREIGN KEY (
			isuCd
		)
		REFERENCES MASTER (
			isuCd
		)on delete cascade;

ALTER TABLE REALTIME_PRICE
	ADD
		CONSTRAINT FK_PRICE_TO_RP
		FOREIGN KEY (
			isuCd
		)
		REFERENCES PRICE (
			isuCd
		)on delete cascade;

ALTER TABLE DAILY_PRICE
	ADD
		CONSTRAINT FK_PRICE_TO_DP
		FOREIGN KEY (
			isuCd
		)
		REFERENCES PRICE (
			isuCd
		)on delete cascade;

ALTER TABLE PLAYER_LISTS
	ADD
		CONSTRAINT FK_LISTS_TO_PL
		FOREIGN KEY (
			isuCd
		)
		REFERENCES LISTS (
			isuCd
		)on delete cascade;

ALTER TABLE PLAYER_LISTS
	ADD
		CONSTRAINT FK_PLAYER_TO_PL
		FOREIGN KEY (
			PLAYER_NICKNAME
		)
		REFERENCES PLAYER (
			PLAYER_NICKNAME
		)on delete cascade;

ALTER TABLE STOCK_DEAL_HISTORY
	ADD
		CONSTRAINT FK_LISTS_TO_SDH
		FOREIGN KEY (
			isuCd
		)
		REFERENCES LISTS (
			isuCd
		)on delete cascade;

ALTER TABLE STOCK_DEAL_HISTORY
	ADD
		CONSTRAINT FK_PLAYER_TO_SDH
		FOREIGN KEY (
			PLAYER_NICKNAME
		)
		REFERENCES PLAYER (
			PLAYER_NICKNAME
		)on delete cascade;

ALTER TABLE EARNING_RATE_HISTORY
	ADD
		CONSTRAINT FK_PLAYER_TO_ERH
		FOREIGN KEY (
			PLAYER_NICKNAME
		)
		REFERENCES PLAYER (
			PLAYER_NICKNAME
		)on delete cascade;

ALTER TABLE ITEM_MARKET
	ADD
		CONSTRAINT FK_PLAYER_TO_IM
		FOREIGN KEY (
			PLAYER_NICKNAME
		)
		REFERENCES PLAYER (
			PLAYER_NICKNAME
		)on delete cascade;

ALTER TABLE ITEM_MARKET
	ADD
		CONSTRAINT FK_ITEM_TO_IM
		FOREIGN KEY (
			ITEM_CODE
		)
		REFERENCES ITEM (
			ITEM_CODE
		)on delete cascade;

ALTER TABLE BOARD_IMAGE
	ADD
		CONSTRAINT FK_BOARD_TO_BI
		FOREIGN KEY (
			BOARD_NO
		)
		REFERENCES BOARD (
			BOARD_NO
		)on delete cascade;

ALTER TABLE STOCK_LIKE
	ADD
		CONSTRAINT FK_PLAYER_TO_SL
		FOREIGN KEY (
			PLAYER_NICKNAME
		)
		REFERENCES PLAYER (
			PLAYER_NICKNAME
		)on delete cascade;

ALTER TABLE STOCK_LIKE
	ADD
		CONSTRAINT FK_LISTS_TO_SL
		FOREIGN KEY (
			isuCd
		)
		REFERENCES LISTS (
			isuCd
		)on delete cascade;

ALTER TABLE PLAYER_LIKE
	ADD
		CONSTRAINT FK_PLAYER_TO_PLIKE
		FOREIGN KEY (
			PLAYER_NICKNAME
		)
		REFERENCES PLAYER (
			PLAYER_NICKNAME
		)on delete cascade;

ALTER TABLE PLAYER_LIKE
	ADD
		CONSTRAINT FK_PLAYER_TO_PLIKE2
		FOREIGN KEY (
			PLAYER_NICKNAME2
		)
		REFERENCES PLAYER (
			PLAYER_NICKNAME
		)on delete cascade;

ALTER TABLE PLAYER_SETTING
	ADD
		CONSTRAINT FK_PLAYER_TO_PS
		FOREIGN KEY (
			PLAYER_NICKNAME
		)
		REFERENCES PLAYER (
			PLAYER_NICKNAME
		)on delete cascade;