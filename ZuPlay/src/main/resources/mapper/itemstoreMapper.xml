<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosta.zuplay.model.dao.ItemStoreDAO">
	<select id="itemStoreSelect" parameterType="java.util.Map">
		select * from (select
		rownum,item_code,item_name,item_price,item_class,item_grade,item_img,item_gender
		where upper(item_gender)!=#{playerGender} and item_class=#{itemClass} and item_grade='common') where
		rownum between #{startNo} and #{endNo}
	</select>
	<select id="getRuby" parameterType="String" resultType="int">
		select player_ruby from player where player_nickname=#{playerNickname}
	</select>
	<select id="getPrice" parameterType="String" resultType="int">
		select item_price from item where item_code=#{itemCode}
	</select>
	<select id="getItemIndex" parameterType="String" resultType="int">
		select pi_index from player_item where player_nickname=#{playerNickname} order by pi_index
	</select>
	<update id="payRuby" parameterType="java.util.Map">
		update player set (player_ruby=player_ruby-#{price}) where player_nickname=#{playerNickname}
	</update>
	<insert id="itemStoreBuy" parameterType="java.util.Map">
		insert into player_item values(pi_sq.nextval,#{playerNickname},#{itemCode},'F',#{piIndex})
	</insert>
	<delete id="itemDelete" parameterType="int">
		delete player_item where pi_sq=#{piSq}
	</delete>
</mapper>