<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosta.zuplay.model.dao.FriendDAO">

	<resultMap type="friendDTO" id="friendMap">
		<id column="friend_sq" property="friendSq" />
		<result column="player_nickname" property="playerNickname" />
		<result column="player_nickname2" property="playerNickname2" />
		<result column="friend_isacepted" property="friendIsAccepted" />
		<result column="friend_date" property="friendDate" />
		<association property="playerDTO" javaType="playerDTO">
			<id column="player_nickname" property="playerNickname" />
			<result column="player_naver_id" property="playerNaverId" />
			<result column="player_gender" property="playerGender" />
			<result column="player_age" property="playerAge" />
			<result column="player_money" property="playerMoney" />
			<result column="player_pre_money" property="playerPreMoney" />
			<result column="player_ruby" property="playerRuby" />
			<result column="player_last_access" property="playerLastAccess" />
			<result column="player_grade" property="playerGrade" />
			<result column="player_daily_rank" property="playerDailyRank" />
			<result column="player_season_rank" property="playerSeasonRank" />
		</association>
		<collection property="playerItemDTO" ofType="playerItemDTO">
			<id column="pi_sq" property="piSq" />
			<result column="player_nickname" property="playerNickname" />
			<result column="item_code" property="itemCode" />
			<result column="pi_index" property="piIndex" />
			<association property="itemDTO" javaType="itemDTO">
				<id column="item_code" property="itemCode" />
				<result column="item_name" property="itemName" />
				<result column="item_price" property="itemPrice" />
				<result column="item_class" property="itemClass" />
				<result column="item_grade" property="itemGrade" />
				<result column="item_img" property="itemImg" />
			</association>
		</collection>
	</resultMap>
	<!-- 친구명 조회 -->
	<select id="friendSelectOnlyNicknameA" parameterType="String"
		resultType="String">
		select player_nickname from friend where
		player_nickname2=#{value} and friend_isacepted='T'
	</select>
	<select id="friendSelectOnlyNicknameB" parameterType="String"
		resultType="String">
		select player_nickname2 from friend where
		player_nickname=#{value}
	</select>
	<!--친구조회 -->
	<select id="friendSelectA" parameterType="String" resultMap="friendMap">
		select * from
		friend f join player_item pi on
		f.player_nickname2=pi.player_nickname
		join item i on
		pi.item_code=i.item_code
		join player p on
		f.player_nickname2=p.player_nickname where
		f.player_nickname=#{value}
		and
		7>pi_index order by pi_index
	</select>
	<select id="friendSelectB" parameterType="String" resultMap="friendMap">
		select * from
		friend f join player_item pi on
		f.player_nickname=pi.player_nickname join
		item i on
		pi.item_code=i.item_code join player p on
		f.player_nickname=p.player_nickname where
		f.player_nickname2=#{playerNickname} and
		7>pi_index order by pi_index
	</select>
	<!-- 친구체크 -->
	<select id="friendCheck" parameterType="java.util.Map"
		resultMap="friendMap">
		select * from friend where player_nickname=#{playerNickname}
		and
		player_nickname2=#{playerNickname2}
	</select>
	<!-- 친구요청 -->
	<insert id="friendAdd" parameterType="java.util.Map">
		insert into friend
		(friend_sq,player_nickname,player_nickname2,friend_isacepted,friend_date)
		values(friend_sq.nextval,#{playerNickname},#{playerNickname2},'F',sysdate)
	</insert>
	<!-- 친구삭제 -->
	<delete id="friendDel" parameterType="int">
		delete friend where
		friend_sq=#{friendSq}
	</delete>
	<!-- 친구수락 -->
	<update id="friendAccept" parameterType="int">
		update friend set
		friend_isacepted='T' where friend_sq=#{friendSq}
	</update>

</mapper>